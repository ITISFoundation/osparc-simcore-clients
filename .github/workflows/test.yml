name: test
on:
  workflow_run:
    workflows:
      - publish-python-client
    types:
      - completed
jobs:
  test-20-04:
    name: python ${{ matrix.python-version }} ubuntu-20.04
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - name: Generate client
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run download ${{ github.event.workflow_run.id }} --dir=clients/python/artifacts
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-{{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip
      - name: Install and Test
        run: |
          make devenv
          source .venv/bin/activate
          cd clients/python
          make install-test
          nox -s test-${{ matrix.python-version }}
  test-latest:
    name: python ${{ matrix.python-version }} ubuntu-latest
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-{{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip
      - name: Install and Test
        run: |
          pip install --upgrade nox
          cd clients/python
          pip install -r requirements/generate.txt
          make python-client
          nox -s test-${{ matrix.python-version }}
    # TODO: add coverage
    # - name: Upload coverage report
    #   uses: codecov/codecov-action@v1
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     name: codecov
