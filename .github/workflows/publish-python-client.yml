name: publish-python-client
run-name: python client
permissions:
  id-token: write
on:
  workflow_dispatch:
    inputs:
      repo:
        description: "Repository where openapi-json was generated"
        default: "ITISFoundation/osparc-simcore-clients"
      run_id:
        description: "Run ID of the workflow which generated openapi.json as an artifact"
        required: true
  push:
jobs:
  build-and-upload-wheel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Download open api json
        if: github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rm ./api/openapi.json
          gh run download ${{ github.event.inputs.run_id }}  --repo=${{ github.event.inputs.repo }} --dir ./api
          if [ ! -e "./api/openapi.json" ]; then
            echo "Could not correctly download openapi.json"
            ls ./api
            exit 1
          fi
      - name: Generate client
        run: |
          git status
          make devenv
          source .venv/bin/activate
          cd clients/python
          make install-dev
          make dist-ci
      - name: Determine wheel artifact
        id: find-wheel
        run: |
          WHEEL=$(ls clients/python/artifacts/dist/*whl)
          echo "wheel-path=${WHEEL}" >> $GITHUB_OUTPUT
          echo "wheel-dir=$(dirname ${WHEEL})" >> $GITHUB_OUTPUT
          echo "wheel-name=$(basename ${WHEEL})" >> $GITHUB_OUTPUT
      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.find-wheel.outputs.wheel-name }}
          path: ${{ steps.find-wheel.outputs.wheel-path }}
      - name: Publish package to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        with:
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          packages-dir: ${{ steps.find-wheel.outputs.wheel-dir }}
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          verbose: true
          packages-dir: ${{ steps.find-wheel.outputs.wheel-dir }}
