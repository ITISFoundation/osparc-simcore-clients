name: publish-and-test-python-client
on:
  workflow_dispatch:
  push:
  pull_request:
jobs:
  build-n-publish:
    runs-on: ubuntu-latest
    outputs:
      osparc: ${{ steps.find-wheel.outputs.osparc-wheel }}
      osparc_client: ${{ steps.find-wheel.outputs.osparc_client-wheel }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Generate version from tag
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          tag_version=$(echo ${{ github.ref }} | grep -oP '(?<=refs/tags/v)\d+\.\d+\.\d+'))
          bash scripts/validate_semantic_version.bash "${tag_version}" > clients/python/client/VERSION
      - name: Generate client
        run: |
          git status
          make devenv
          source .venv/bin/activate
          cd clients/python
          make install-dev
          make dist-ci
      - name: Determine wheel artifact
        id: find-wheel
        run: |
          cd clients/python/artifacts/dist
          OSPARC_WHEEL=$(ls osparc-*.whl)
          OSPARC_CLIENT_WHEEL=$(ls osparc_client*.whl)
          echo "osparc-wheel=${OSPARC_WHEEL}" >> $GITHUB_OUTPUT
          echo "osparc_client-wheel=${OSPARC_CLIENT_WHEEL}" >> $GITHUB_OUTPUT
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: osparc_python_wheels
          path: clients/python/artifacts/dist/

  test-20-04:
    name: python ${{ matrix.python-version }} ubuntu-20.04
    runs-on: ubuntu-20.04
    needs: build-n-publish
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-{{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip
      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: osparc_python_wheels
          path: clients/python/artifacts/dist/
      - name: Install and Test
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install pytest
          python -m pip install clients/python/artifacts/dist/${{needs.build-n-publish.outputs.osparc}} --find-links=clients/python/artifacts/dist
          cd clients/python
          make install-test
          pytest -v --ignore=/artifacts/client --ignore=test/e2e

  test-latest:
    name: python ${{ matrix.python-version }} ubuntu-latest
    runs-on: ubuntu-latest
    needs: build-n-publish
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-{{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip
      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: osparc_python_wheels
          path: clients/python/artifacts/dist/
      - name: Install and Test
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install pytest
          python -m pip install clients/python/artifacts/dist/${{needs.build-n-publish.outputs.osparc}} --find-links=clients/python/artifacts/dist
          cd clients/python
          make install-test
          pytest -v --ignore=/artifacts/client --ignore=test/e2e

  publish-osparc_client:
    name: Publish osparc_client wheel
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags')) ||
      (github.ref == 'refs/heads/master' && github.event_name == 'push')
    runs-on: ubuntu-latest
    needs: [build-n-publish, test-20-04, test-latest]
    environment:
      name: pypi
      url: https://pypi.org/p/osparc_client
    permissions:
      id-token: write
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: osparc_python_wheels
          path: dist/
      - name: Remove osparc wheel
        run: rm -f dist/${{needs.build-n-publish.outputs.osparc}}
      - name: Publish osparc_client to Test PyPI
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          packages-dir: dist/
      - name: Publish osparc_client to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          packages-dir: dist/

  publish-osparc:
    name: Publish osparc wheel
    runs-on: ubuntu-latest
    needs: [build-n-publish, test-20-04, test-latest]
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags')) ||
      (github.ref == 'refs/heads/master' && github.event_name == 'push')
    environment:
      name: pypi
      url: https://pypi.org/p/osparc
    permissions:
      id-token: write
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: osparc_python_wheels
          path: dist/
      - name: Remove osparc_client wheel
        run: rm -f dist/${{needs.build-n-publish.outputs.osparc_client}}
      - name: Publish osparc to Test PyPI
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          packages-dir: dist/
      - name: Publish osparc to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          packages-dir: dist/
