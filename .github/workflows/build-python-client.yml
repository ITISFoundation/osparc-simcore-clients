name: build-and-test-python-client
on:
  workflow_dispatch:
  push:
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      osparc: ${{ steps.variables.outputs.osparc-wheel }}
      osparc_client: ${{ steps.variables.outputs.osparc_client-wheel }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.ref }}
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.14
      - name: install uv
        uses: yezz123/setup-uv@v4
      - name: Setup Python environment
        run: |
          git status
          make devenv
          source .venv/bin/activate
      - name: Git tag to VERSION
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          source .venv/bin/activate
          version=$(echo ${{ github.ref }} | grep -oP '(?<=refs/tags/v)\d+\.\d+\.\d+')
          python scripts/is_semantic_version.py "${version}"
          echo "${version}" > clients/python/VERSION
      - name: Auto-generate python_client and build distributions
        run: |
          source .venv/bin/activate
          cd clients/python
          uv pip install -r requirements/dev.txt
          make python-client
          make dist
      - name: Set variables
        id: variables
        run: |
          cd clients/python/artifacts/dist
          osparc_wheel=$(ls osparc-*.whl)
          osparc_client_wheel=$(ls osparc_client*.whl)
          echo "osparc-wheel=${osparc_wheel}" >> $GITHUB_OUTPUT
          echo "osparc_client-wheel=${osparc_client_wheel}" >> $GITHUB_OUTPUT
          echo "github.ref: ${{github.ref}}"
          echo "github.event_name: ${{github.event_name}}"
          echo "github.workflow.id: ${{github.workflow.id}}"
          echo "github.run_id: ${{github.run_id}}"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: osparc_python_wheels
          path: clients/python/artifacts/dist/


  test-latest:
    name: python ${{ matrix.python-version }} ubuntu-latest
    runs-on: ubuntu-latest
    needs: build
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9, 3.10.14]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: install uv
        uses: yezz123/setup-uv@v4
      - name: Pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-{{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: osparc_python_wheels
          path: clients/python/artifacts/dist/
      - name: Install and Test
        run: |
          python -m venv .venv
          source .venv/bin/activate
          uv pip install pytest
          uv pip install clients/python/artifacts/dist/${{needs.build.outputs.osparc}} --find-links=clients/python/artifacts/dist
          cd clients/python
          make install-unit-test
          pytest -v --ignore=/artifacts/client --ignore=test/e2e

  publish:
    name: Publish clients
    if: github.event_name == 'push' && ( startsWith(github.ref, 'refs/tags') || github.ref == 'refs/heads/master' )
    needs: [test-20-04, test-latest]
    uses: ./.github/workflows/publish-python-client.yml
